name: on_pr_to_runtime_image

on:
  pull_request:
    branches: [ master ]
    paths:
      - 'runtime/Dockerfile'

env:
  REGISTRY: ghcr.io
  FFMPEG_VERSION: "5.0.1"
  RUNTIME_IMAGE: "runtime"
  BASE_IMAGE: "base"
  BUILD_IMAGE: "build"
  IMAGE_NAME: ${{ github.repository }}


jobs:

  pr_to_runtime:
    environment: ghcr.io
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf
        with:
          driver-opts: network=host

      - name: Pull base image
        run: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.BASE_IMAGE }}

      - name: Inspect base image
        id: base-image
        run: >-
          echo "::set-output name=digest::$(
            docker image inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.BASE_IMAGE }} | jq -r '.[] | .RepoDigests[]'
          )"

      - name: Pull build image
        run: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.FFMPEG_VERSION }}-${{ env.BUILD_IMAGE }}

      - name: Inspect build image
        id: build-image
        run: >-
          echo "::set-output name=digest::$(
            docker image inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.FFMPEG_VERSION }}-${{ env.BUILD_IMAGE }} | jq -r '.[] | .RepoDigests[]'
          )"

      - name: "ffmpeg-debian:<ffmpeg-version>-runtime image building stage"
        id: runtime-image
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: ./runtime
          push: false
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.FFMPEG_VERSION }}-${{ env.RUNTIME_IMAGE }}
          build-args: |
            BASE_IMAGE_DIGEST_TAG=${{ steps.base-image.outputs.digest }}
            BUILD_IMAGE_DIGEST_TAG=${{ steps.build-image.outputs.digest }}
